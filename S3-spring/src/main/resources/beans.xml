<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="hello" class="com.yc.spring.Hello">   
        <!-- collaborators and configuration for this bean go here -->
    </bean>

	 <bean id="mdao" class="com.yc.spring.dao.MySQLUserDao">   
        <!-- collaborators and configuration for this bean go here -->
    </bean>
    
    
    <bean id="odao" class="com.yc.spring.dao.OracleUserDao">   
        <!-- collaborators and configuration for this bean go here -->
    </bean>
    
    <!-- 
    	spring 依赖注入（DI）注入方式有三种
    	注入：对象属性初始化设值
    	1、setter注入（set方法注入）
    	2、构造方法注入
    	3、接口注入==》springMVC大量应用
     -->
	<!-- 注入的例子是使用是实体对象，实际开发中很少对实体对象设值 -->
	<bean id="p1" class="com.yc.spring.bean.Person">
	<!-- property实现setter注入 -->
		<property name="name" value="王默"></property>
		<property name="age" value="12"></property>
		<property name="killeds" >
			<list>
				<value type="java.lang.String">镜像兽</value>
				<value>wfff</value>
				<value type="java.lang.String">wm</value>
				<value>null</value>
				<!-- <null></null> -->
			</list>
		</property>
		
	</bean>

<!-- primary="true" 设置当前的bean是主要的bean -->
<!-- index可以用来指定构造函数 -->
	<bean class="com.yc.spring.bean.Person" primary="true">
		<constructor-arg name="name" value="likui" index="1"></constructor-arg>
		<constructor-arg name="alisa" value="likui" index="2"></constructor-arg>
		<constructor-arg name="age" value="30" index="0"></constructor-arg>
		
	</bean>
	
	<bean id="p2" class="com.yc.spring.bean.Person">
		<property name="name" value="wuyong"></property>
		<property name="age" value="38"></property>
		<property name="friend" ref="p3">
		</property>
	</bean>
	
	<bean id="p3" class="com.yc.spring.bean.Person">
		<property name="name" value="huarong"></property>
	</bean>
	
	<!-- 静态 工厂方法配置 工厂方式创建对象 -->
	<bean id="p4" class="com.yc.spring.bean.Person" factory-method="PersonFactory">
		<property name="name" value="wangying"></property>
	</bean>
	
	<!-- 实例工厂方法配置 -->
	<bean id="p5" class="com.yc.spring.bean.Person" 
		factory-method="PersonFactory1" factory-bean="personFactory">
		<property name="name" value="husanniang"></property>
	</bean>
	
	<bean id="personFactory" class="com.yc.spring.bean.Person"> 
	</bean>
	
	<!-- 
		scope="singleton" 单例  默认每次getBean的时候，都会使用 同一个bean
		scope="prototype" 原型（多利）每次getBean的时候，都会创建一个新的bean
		其他作用域： session,request,global
		prototype 模式每次都会创建新的bean ,每次都会调用new or 工厂方法
	 -->
	<bean id="hello1" class="com.yc.spring.Hello" scope="prototype"> 
	</bean>
	
	<!-- 
	lazy-init 懒加载，默认为false,spring 容器在启动时，就会创建所有未配置懒加载bean
	prototype 原型模式下默认懒加载
	 -->
	<bean id="hello2" class="com.yc.spring.Hello" lazy-init="true"> 
		<constructor-arg name="a" value="100"></constructor-arg>
	</bean>
</beans>